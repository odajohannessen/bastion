@page "/{Id}"

@using Microsoft.AspNetCore.Components.Forms
@using Bastion.Core.Domain.UserInputSecret;
@using Bastion.Core.Domain.UserInputSecret.Dto;
@using Bastion.Core.Domain.UserInputSecret.Pipelines;
@using Bastion.Core.Domain.Encryption;
@using Bastion.Core.Domain.Encryption.Pipelines;
@using Bastion.Core.Domain.Decryption;
@using Bastion.Core.Domain.Decryption.Pipelines;
@using Bastion.Models;

<PageTitle>Bastion</PageTitle>

<h1>Display secret</h1>
<div>Id: @Id</div>
<div>Secret: @decryptedString </div>



@code {
    [Parameter]
    public string Id { get; set; }
    public string decryptedString { get; set; } = "Empty";

    public async Task SomeStartupMethod()
    {
        // Decrypt secret
        var responseDecrypt = await mediator.Send(new DecryptAndDeleteSecret.Request(Id));
        decryptedString = responseDecrypt.Plaintext;
    }

    //protected override void OnInitialized()
    //{
    //}

    //protected override async Task OnInitializedAsync()
    //{
    //    await SomeStartupMethod();
    //}

    protected override async void OnInitialized()
    {
        // Decrypt secret
        await SomeStartupMethod();
    }

    // TODO: Use parameter setting
    // TODO: Fix secret disappearing
}