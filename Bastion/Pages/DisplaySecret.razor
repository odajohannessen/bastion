@page "/{Id}"

@using Microsoft.AspNetCore.Components.Forms
@using Bastion.Core.Domain.UserInputSecret;
@using Bastion.Core.Domain.UserInputSecret.Dto;
@using Bastion.Core.Domain.UserInputSecret.Pipelines;
@using Bastion.Core.Domain.Encryption;
@using Bastion.Core.Domain.Encryption.Pipelines;
@using Bastion.Core.Domain.Decryption;
@using Bastion.Core.Domain.Decryption.Pipelines;
@using Bastion.Models;
@inject CopyToClipboardManager ClipBoardManager

<PageTitle>Bastion</PageTitle>

<h1>Decrypted secret</h1>
<div class="decrypted">
@if (decryptedString == null)
{
    @message
} 
else
{
    @decryptedString
}
</div>
<br />
<div>
<button class="btn btn-primary" @onclick="CopyToClipboard">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-clipboard" viewBox="0 0 16 16">
        <path d="M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z" />
        <path d="M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z" />
    </svg>
</button>
</div>
@code {
    [Parameter]
    public string Id { get; set; }

    private string? decryptedString { get; set; }

    public string message = "Fetching secret...";

    public async Task<string> GetDecryptedSecret()
    {
        // Decrypt secret
        var responseDecrypt = await mediator.Send(new DecryptAndDeleteSecret.Request(Id));
        return responseDecrypt.Plaintext;
    }

    protected override async Task OnInitializedAsync()
    {
        decryptedString = await GetDecryptedSecret();
    }

    async Task CopyToClipboard()
    {
        try
        {
            await ClipBoardManager.WriteTextAsync($"{decryptedString}");
        }
        catch
        {
            Console.WriteLine("Cannot write text to clipboard");
        }
    }
}